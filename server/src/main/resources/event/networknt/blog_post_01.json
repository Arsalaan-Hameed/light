[
  {
    "@type": "d",
    "@rid": "#18:19",
    "@version": 1,
    "@class": "Event",
    "eventId": 10020,
    "createUserId": "stevehu",
    "data": {
      "summary": "This article will walk you through steps to get start Light Framework as Java API developer in development mode. It helps you to set up IDE, Maven plugins and shows you how to test the API developed.",
      "createUserId": "stevehu",
      "host": "www.networknt.com",
      "entityId": "GxK5zzLqSKOM-ybKobKxeg",
      "title": "Start Light Framework with two demo sites for API developer in development mode ",
      "content": "TODO",
      "parentId": "All",
      "tags": [
        "Light Framework",
        "Backend"
      ],
      "createDate": "2016-04-02T17:47:37.991"
    },
    "name": "addPost",
    "category": "blog",
    "createDate": "2016-04-02T17:47:37.991",
    "ipAddress": "127.0.0.1",
    "@fieldTypes": "eventId=l,createDate=t"
  },
  {
    "@type": "d",
    "@rid": "#18:20",
    "@version": 1,
    "@class": "Event",
    "eventId": 10021,
    "createUserId": "stevehu",
    "data": {
      "summary": "This article will walk you through steps to get start Light Framework as Java API developer in development mode. It helps you to set up IDE, Maven plugins and shows you how to test the API developed.",
      "updateDate": "2016-04-02T17:51:56.658",
      "updateUserId": "stevehu",
      "originalSite": "null",
      "host": "www.networknt.com",
      "entityId": "GxK5zzLqSKOM-ybKobKxeg",
      "originalUrl": "null",
      "title": "Start Light Framework with two demo sites for API developer in development mode ",
      "originalAuthor": "null",
      "content": "TODO Not done yet."
    },
    "name": "updPost",
    "category": "blog",
    "createDate": "2016-04-02T17:51:56.658",
    "ipAddress": "127.0.0.1",
    "@fieldTypes": "eventId=l,createDate=t"
  },
  {
    "@type": "d",
    "@rid": "#18:21",
    "@version": 1,
    "@class": "Event",
    "eventId": 10022,
    "createUserId": "stevehu",
    "data": {
      "summary": "This article will walk you through steps to get start Light Framework as Java API developer in development mode. It helps you to set up IDE, Maven plugins and shows you how to test the API developed.",
      "updateDate": "2016-04-02T17:56:12.586",
      "updateUserId": "stevehu",
      "originalSite": "",
      "host": "www.networknt.com",
      "entityId": "GxK5zzLqSKOM-ybKobKxeg",
      "originalUrl": "",
      "title": "Start Light Framework with two demo sites for API developer in development mode ",
      "originalAuthor": "",
      "content": "TODO Not done yet."
    },
    "name": "updPost",
    "category": "blog",
    "createDate": "2016-04-02T17:56:12.586",
    "ipAddress": "127.0.0.1",
    "@fieldTypes": "eventId=l,createDate=t"
  },
  {
    "@type": "d",
    "@rid": "#18:22",
    "@version": 1,
    "@class": "Event",
    "eventId": 10023,
    "createUserId": "stevehu",
    "data": {
      "summary": "This article will walk you through steps to get start Light Framework as Java API developer in development mode. It helps you to set up IDE, Maven plugins and shows you how to debug and test the API developed.",
      "updateDate": "2016-04-02T18:49:15.360",
      "updateUserId": "stevehu",
      "originalSite": "",
      "host": "www.networknt.com",
      "entityId": "GxK5zzLqSKOM-ybKobKxeg",
      "originalUrl": "",
      "title": "Start Light Framework with two demo sites for API developer in development mode ",
      "originalAuthor": "",
      "content": "The Light Framework contains two parts: Front end single page application based on React or Angular and back end API built as rules on top of Light Rule Engine. For API developers, you don't need to install the front end tools to work on your APIs. \n\n### Create a project folder\n\nI am assuming you are using Linux desktop like Ubuntu but the instruction will work on Mac and Windows with some modifications. First you need to create a project folder in your home directory.\n\nFor example, my user directory is /home/steve and I will create a new folder named project and clone the light framework from github.\n\n```\nmkdir project\ncd project\ngit clone https://github.com/networknt/light.git\n```\n\n### Build Light Framework from command line\nIn order to build the framework Java APIs, you need to install the following software packages. \n1. Oracle JDK 1.8\n2. Apache Maven 3.3.x\n\nNow, let's build the server and start it\n```\ncd light\nmvn clean install\n```\n### Start and debug server from IDE\n If you want to start server from your IDE or debug into it, open your IDE (Eclipse or Idea) and open the project from folder light. Both Eclipse and Idea will import the parent pom.xml. To start the server, navigate to server/src/main/java/com/networknt/light/server and run LightServer class. If the database doesn't exist, it will create a new one under your home directory by replaying events.\n\nOnce the server is ready, you should see the following messages on the console.\n\n```\n2016-03-09 20:23:31,396 [XNIO-1 I/O-1] DEBUG org.xnio.niorun(431) - Started channel thread 'XNIO-1 I/O-1', selector sun.nio.ch.EPollSelectorImpl@2790e59d\n2016-03-09 20:23:31,396 [XNIO-1 I/O-2] DEBUG org.xnio.niorun(431) - Started channel thread 'XNIO-1 I/O-2', selector sun.nio.ch.EPollSelectorImpl@6471ccf5\n2016-03-09 20:23:31,398 [XNIO-1 I/O-3] DEBUG org.xnio.niorun(431) - Started channel thread 'XNIO-1 I/O-3', selector sun.nio.ch.EPollSelectorImpl@72f54de2\n2016-03-09 20:23:31,399 [XNIO-1 I/O-4] DEBUG org.xnio.niorun(431) - Started channel thread 'XNIO-1 I/O-4', selector sun.nio.ch.EPollSelectorImpl@27bb2cd1\n```\n\n### Install Maven plugin rule:load\n\nAs you may know it already, each API endpoint on the Light Framework is a rule that running within the Light Rule Engine. Once the rule is built, it need to be loaded to the Framework and as an event. We have develop a Maven plugin to to that.\n\nTo install the plugin.\n\n```\ncd ~/project\ngit clone https://github.com/networknt/maven-plugin.git\ncd maven-plugin/rule-loader\nmvn clean install\n```\n\nNow the plugin is installed. If you have changed any rule from project/light/rule folder, you can just to go that folder and run the following command to load rule into the framework. Just need to be sure that the LightServer is running in your IDE. \n\n```\nmvn rule:load\n```\n\nYou need to restart your server from IDE in order for the updates to take effect. \n\n### Test and Debug rules\nTo test your APIs, you can use Postman or Google Rest Client. When requests are sent to the server, you can debug it from IDE just like working with POJO.\n\n\n"
    },
    "name": "updPost",
    "category": "blog",
    "createDate": "2016-04-02T18:49:15.360",
    "ipAddress": "127.0.0.1",
    "@fieldTypes": "eventId=l,createDate=t"
  }
]
